/*
 * generated by Xtext 2.25.0
 */
package org.xtext.example.mydsl.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class MyDslGrammarAccess extends AbstractElementFinder.AbstractGrammarElementFinder {
	
	public class ZNotationModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.ZNotationModel");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cZNotationModelAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cZNotationModelKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cModelNameKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cModelNameAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cModelNameEStringParserRuleCall_3_1_0 = (RuleCall)cModelNameAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cSchemaKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Assignment cSchemaAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final RuleCall cSchemaSchemaParserRuleCall_4_2_0 = (RuleCall)cSchemaAssignment_4_2.eContents().get(0);
		private final Group cGroup_4_3 = (Group)cGroup_4.eContents().get(3);
		private final Keyword cCommaKeyword_4_3_0 = (Keyword)cGroup_4_3.eContents().get(0);
		private final Assignment cSchemaAssignment_4_3_1 = (Assignment)cGroup_4_3.eContents().get(1);
		private final RuleCall cSchemaSchemaParserRuleCall_4_3_1_0 = (RuleCall)cSchemaAssignment_4_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4_4 = (Keyword)cGroup_4.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//ZNotationModel returns ZNotationModel:
		//    {ZNotationModel}
		//    'ZNotationModel'
		//    '{'
		//        ('ModelName' ModelName=EString)?
		//        ('schema' '{' schema+=Schema ( "," schema+=Schema)* '}' )?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{ZNotationModel}
		//'ZNotationModel'
		//'{'
		//    ('ModelName' ModelName=EString)?
		//    ('schema' '{' schema+=Schema ( "," schema+=Schema)* '}' )?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{ZNotationModel}
		public Action getZNotationModelAction_0() { return cZNotationModelAction_0; }
		
		//'ZNotationModel'
		public Keyword getZNotationModelKeyword_1() { return cZNotationModelKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('ModelName' ModelName=EString)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'ModelName'
		public Keyword getModelNameKeyword_3_0() { return cModelNameKeyword_3_0; }
		
		//ModelName=EString
		public Assignment getModelNameAssignment_3_1() { return cModelNameAssignment_3_1; }
		
		//EString
		public RuleCall getModelNameEStringParserRuleCall_3_1_0() { return cModelNameEStringParserRuleCall_3_1_0; }
		
		//('schema' '{' schema+=Schema ( "," schema+=Schema)* '}' )?
		public Group getGroup_4() { return cGroup_4; }
		
		//'schema'
		public Keyword getSchemaKeyword_4_0() { return cSchemaKeyword_4_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_4_1() { return cLeftCurlyBracketKeyword_4_1; }
		
		//schema+=Schema
		public Assignment getSchemaAssignment_4_2() { return cSchemaAssignment_4_2; }
		
		//Schema
		public RuleCall getSchemaSchemaParserRuleCall_4_2_0() { return cSchemaSchemaParserRuleCall_4_2_0; }
		
		//( "," schema+=Schema)*
		public Group getGroup_4_3() { return cGroup_4_3; }
		
		//","
		public Keyword getCommaKeyword_4_3_0() { return cCommaKeyword_4_3_0; }
		
		//schema+=Schema
		public Assignment getSchemaAssignment_4_3_1() { return cSchemaAssignment_4_3_1; }
		
		//Schema
		public RuleCall getSchemaSchemaParserRuleCall_4_3_1_0() { return cSchemaSchemaParserRuleCall_4_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4_4() { return cRightCurlyBracketKeyword_4_4; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class SchemaElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Schema");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cSchemaAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cSchemaKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cSchemaTitleKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cSchemaTitleAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cSchemaTitleEStringParserRuleCall_3_1_0 = (RuleCall)cSchemaTitleAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cSchemastateKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cSchemastateAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final CrossReference cSchemastateSchemaStateCrossReference_4_1_0 = (CrossReference)cSchemastateAssignment_4_1.eContents().get(0);
		private final RuleCall cSchemastateSchemaStateEStringParserRuleCall_4_1_0_1 = (RuleCall)cSchemastateSchemaStateCrossReference_4_1_0.eContents().get(1);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cRelationKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Assignment cRelationAssignment_5_2 = (Assignment)cGroup_5.eContents().get(2);
		private final RuleCall cRelationRelationParserRuleCall_5_2_0 = (RuleCall)cRelationAssignment_5_2.eContents().get(0);
		private final Group cGroup_5_3 = (Group)cGroup_5.eContents().get(3);
		private final Keyword cCommaKeyword_5_3_0 = (Keyword)cGroup_5_3.eContents().get(0);
		private final Assignment cRelationAssignment_5_3_1 = (Assignment)cGroup_5_3.eContents().get(1);
		private final RuleCall cRelationRelationParserRuleCall_5_3_1_0 = (RuleCall)cRelationAssignment_5_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5_4 = (Keyword)cGroup_5.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//Schema returns Schema:
		//    {Schema}
		//    'Schema'
		//    '{'
		//        ('SchemaTitle' SchemaTitle=EString)?
		//        ('schemastate' schemastate=[SchemaState|EString])?
		//        ('relation' '{' relation+=Relation ( "," relation+=Relation)* '}' )?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Schema}
		//'Schema'
		//'{'
		//    ('SchemaTitle' SchemaTitle=EString)?
		//    ('schemastate' schemastate=[SchemaState|EString])?
		//    ('relation' '{' relation+=Relation ( "," relation+=Relation)* '}' )?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{Schema}
		public Action getSchemaAction_0() { return cSchemaAction_0; }
		
		//'Schema'
		public Keyword getSchemaKeyword_1() { return cSchemaKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('SchemaTitle' SchemaTitle=EString)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'SchemaTitle'
		public Keyword getSchemaTitleKeyword_3_0() { return cSchemaTitleKeyword_3_0; }
		
		//SchemaTitle=EString
		public Assignment getSchemaTitleAssignment_3_1() { return cSchemaTitleAssignment_3_1; }
		
		//EString
		public RuleCall getSchemaTitleEStringParserRuleCall_3_1_0() { return cSchemaTitleEStringParserRuleCall_3_1_0; }
		
		//('schemastate' schemastate=[SchemaState|EString])?
		public Group getGroup_4() { return cGroup_4; }
		
		//'schemastate'
		public Keyword getSchemastateKeyword_4_0() { return cSchemastateKeyword_4_0; }
		
		//schemastate=[SchemaState|EString]
		public Assignment getSchemastateAssignment_4_1() { return cSchemastateAssignment_4_1; }
		
		//[SchemaState|EString]
		public CrossReference getSchemastateSchemaStateCrossReference_4_1_0() { return cSchemastateSchemaStateCrossReference_4_1_0; }
		
		//EString
		public RuleCall getSchemastateSchemaStateEStringParserRuleCall_4_1_0_1() { return cSchemastateSchemaStateEStringParserRuleCall_4_1_0_1; }
		
		//('relation' '{' relation+=Relation ( "," relation+=Relation)* '}' )?
		public Group getGroup_5() { return cGroup_5; }
		
		//'relation'
		public Keyword getRelationKeyword_5_0() { return cRelationKeyword_5_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_5_1() { return cLeftCurlyBracketKeyword_5_1; }
		
		//relation+=Relation
		public Assignment getRelationAssignment_5_2() { return cRelationAssignment_5_2; }
		
		//Relation
		public RuleCall getRelationRelationParserRuleCall_5_2_0() { return cRelationRelationParserRuleCall_5_2_0; }
		
		//( "," relation+=Relation)*
		public Group getGroup_5_3() { return cGroup_5_3; }
		
		//","
		public Keyword getCommaKeyword_5_3_0() { return cCommaKeyword_5_3_0; }
		
		//relation+=Relation
		public Assignment getRelationAssignment_5_3_1() { return cRelationAssignment_5_3_1; }
		
		//Relation
		public RuleCall getRelationRelationParserRuleCall_5_3_1_0() { return cRelationRelationParserRuleCall_5_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5_4() { return cRightCurlyBracketKeyword_5_4; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class EStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.EString");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSTRINGTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//EString returns ecore::EString:
		//    STRING | ID;
		@Override public ParserRule getRule() { return rule; }
		
		//STRING | ID
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//STRING
		public RuleCall getSTRINGTerminalRuleCall_0() { return cSTRINGTerminalRuleCall_0; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_1() { return cIDTerminalRuleCall_1; }
	}
	public class SchemaStateElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.SchemaState");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cSchemaStateAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cSchemaStateKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cStateTypeKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cStateTypeAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cStateTypeEStringParserRuleCall_3_1_0 = (RuleCall)cStateTypeAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cVariableKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Assignment cVariableAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final RuleCall cVariableVariableParserRuleCall_4_2_0 = (RuleCall)cVariableAssignment_4_2.eContents().get(0);
		private final Group cGroup_4_3 = (Group)cGroup_4.eContents().get(3);
		private final Keyword cCommaKeyword_4_3_0 = (Keyword)cGroup_4_3.eContents().get(0);
		private final Assignment cVariableAssignment_4_3_1 = (Assignment)cGroup_4_3.eContents().get(1);
		private final RuleCall cVariableVariableParserRuleCall_4_3_1_0 = (RuleCall)cVariableAssignment_4_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4_4 = (Keyword)cGroup_4.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//SchemaState returns SchemaState:
		//    {SchemaState}
		//    'SchemaState'
		//    '{'
		//        ('StateType' StateType=EString)?
		//        ('variable' '{' variable+=Variable ( "," variable+=Variable)* '}' )?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{SchemaState}
		//'SchemaState'
		//'{'
		//    ('StateType' StateType=EString)?
		//    ('variable' '{' variable+=Variable ( "," variable+=Variable)* '}' )?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{SchemaState}
		public Action getSchemaStateAction_0() { return cSchemaStateAction_0; }
		
		//'SchemaState'
		public Keyword getSchemaStateKeyword_1() { return cSchemaStateKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('StateType' StateType=EString)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'StateType'
		public Keyword getStateTypeKeyword_3_0() { return cStateTypeKeyword_3_0; }
		
		//StateType=EString
		public Assignment getStateTypeAssignment_3_1() { return cStateTypeAssignment_3_1; }
		
		//EString
		public RuleCall getStateTypeEStringParserRuleCall_3_1_0() { return cStateTypeEStringParserRuleCall_3_1_0; }
		
		//('variable' '{' variable+=Variable ( "," variable+=Variable)* '}' )?
		public Group getGroup_4() { return cGroup_4; }
		
		//'variable'
		public Keyword getVariableKeyword_4_0() { return cVariableKeyword_4_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_4_1() { return cLeftCurlyBracketKeyword_4_1; }
		
		//variable+=Variable
		public Assignment getVariableAssignment_4_2() { return cVariableAssignment_4_2; }
		
		//Variable
		public RuleCall getVariableVariableParserRuleCall_4_2_0() { return cVariableVariableParserRuleCall_4_2_0; }
		
		//( "," variable+=Variable)*
		public Group getGroup_4_3() { return cGroup_4_3; }
		
		//","
		public Keyword getCommaKeyword_4_3_0() { return cCommaKeyword_4_3_0; }
		
		//variable+=Variable
		public Assignment getVariableAssignment_4_3_1() { return cVariableAssignment_4_3_1; }
		
		//Variable
		public RuleCall getVariableVariableParserRuleCall_4_3_1_0() { return cVariableVariableParserRuleCall_4_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4_4() { return cRightCurlyBracketKeyword_4_4; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class RelationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Relation");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cRelationAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cRelationKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cRelationTypeKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cRelationTypeAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cRelationTypeEStringParserRuleCall_3_1_0 = (RuleCall)cRelationTypeAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cRelatedToKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cRelatedToAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cRelatedToEStringParserRuleCall_4_1_0 = (RuleCall)cRelatedToAssignment_4_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Relation returns Relation:
		//    {Relation}
		//    'Relation'
		//    '{'
		//        ('RelationType' RelationType=EString)?
		//        ('RelatedTo' RelatedTo=EString)?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Relation}
		//'Relation'
		//'{'
		//    ('RelationType' RelationType=EString)?
		//    ('RelatedTo' RelatedTo=EString)?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{Relation}
		public Action getRelationAction_0() { return cRelationAction_0; }
		
		//'Relation'
		public Keyword getRelationKeyword_1() { return cRelationKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('RelationType' RelationType=EString)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'RelationType'
		public Keyword getRelationTypeKeyword_3_0() { return cRelationTypeKeyword_3_0; }
		
		//RelationType=EString
		public Assignment getRelationTypeAssignment_3_1() { return cRelationTypeAssignment_3_1; }
		
		//EString
		public RuleCall getRelationTypeEStringParserRuleCall_3_1_0() { return cRelationTypeEStringParserRuleCall_3_1_0; }
		
		//('RelatedTo' RelatedTo=EString)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'RelatedTo'
		public Keyword getRelatedToKeyword_4_0() { return cRelatedToKeyword_4_0; }
		
		//RelatedTo=EString
		public Assignment getRelatedToAssignment_4_1() { return cRelatedToAssignment_4_1; }
		
		//EString
		public RuleCall getRelatedToEStringParserRuleCall_4_1_0() { return cRelatedToEStringParserRuleCall_4_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class VariableElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Variable");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cVariableAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cVariableKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cNameKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cNameAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_3_1_0 = (RuleCall)cNameAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cValueKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cValueAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cValueEStringParserRuleCall_4_1_0 = (RuleCall)cValueAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cTypeKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cTypeAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cTypeEStringParserRuleCall_5_1_0 = (RuleCall)cTypeAssignment_5_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//Variable returns Variable:
		//    {Variable}
		//    'Variable'
		//    '{'
		//        ('Name' Name=EString)?
		//        ('Value' Value=EString)?
		//        ('Type' Type=EString)?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Variable}
		//'Variable'
		//'{'
		//    ('Name' Name=EString)?
		//    ('Value' Value=EString)?
		//    ('Type' Type=EString)?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{Variable}
		public Action getVariableAction_0() { return cVariableAction_0; }
		
		//'Variable'
		public Keyword getVariableKeyword_1() { return cVariableKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('Name' Name=EString)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'Name'
		public Keyword getNameKeyword_3_0() { return cNameKeyword_3_0; }
		
		//Name=EString
		public Assignment getNameAssignment_3_1() { return cNameAssignment_3_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_3_1_0() { return cNameEStringParserRuleCall_3_1_0; }
		
		//('Value' Value=EString)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'Value'
		public Keyword getValueKeyword_4_0() { return cValueKeyword_4_0; }
		
		//Value=EString
		public Assignment getValueAssignment_4_1() { return cValueAssignment_4_1; }
		
		//EString
		public RuleCall getValueEStringParserRuleCall_4_1_0() { return cValueEStringParserRuleCall_4_1_0; }
		
		//('Type' Type=EString)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'Type'
		public Keyword getTypeKeyword_5_0() { return cTypeKeyword_5_0; }
		
		//Type=EString
		public Assignment getTypeAssignment_5_1() { return cTypeAssignment_5_1; }
		
		//EString
		public RuleCall getTypeEStringParserRuleCall_5_1_0() { return cTypeEStringParserRuleCall_5_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	
	
	private final ZNotationModelElements pZNotationModel;
	private final SchemaElements pSchema;
	private final EStringElements pEString;
	private final SchemaStateElements pSchemaState;
	private final RelationElements pRelation;
	private final VariableElements pVariable;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public MyDslGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pZNotationModel = new ZNotationModelElements();
		this.pSchema = new SchemaElements();
		this.pEString = new EStringElements();
		this.pSchemaState = new SchemaStateElements();
		this.pRelation = new RelationElements();
		this.pVariable = new VariableElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.xtext.example.mydsl.MyDsl".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//ZNotationModel returns ZNotationModel:
	//    {ZNotationModel}
	//    'ZNotationModel'
	//    '{'
	//        ('ModelName' ModelName=EString)?
	//        ('schema' '{' schema+=Schema ( "," schema+=Schema)* '}' )?
	//    '}';
	public ZNotationModelElements getZNotationModelAccess() {
		return pZNotationModel;
	}
	
	public ParserRule getZNotationModelRule() {
		return getZNotationModelAccess().getRule();
	}
	
	//Schema returns Schema:
	//    {Schema}
	//    'Schema'
	//    '{'
	//        ('SchemaTitle' SchemaTitle=EString)?
	//        ('schemastate' schemastate=[SchemaState|EString])?
	//        ('relation' '{' relation+=Relation ( "," relation+=Relation)* '}' )?
	//    '}';
	public SchemaElements getSchemaAccess() {
		return pSchema;
	}
	
	public ParserRule getSchemaRule() {
		return getSchemaAccess().getRule();
	}
	
	//EString returns ecore::EString:
	//    STRING | ID;
	public EStringElements getEStringAccess() {
		return pEString;
	}
	
	public ParserRule getEStringRule() {
		return getEStringAccess().getRule();
	}
	
	//SchemaState returns SchemaState:
	//    {SchemaState}
	//    'SchemaState'
	//    '{'
	//        ('StateType' StateType=EString)?
	//        ('variable' '{' variable+=Variable ( "," variable+=Variable)* '}' )?
	//    '}';
	public SchemaStateElements getSchemaStateAccess() {
		return pSchemaState;
	}
	
	public ParserRule getSchemaStateRule() {
		return getSchemaStateAccess().getRule();
	}
	
	//Relation returns Relation:
	//    {Relation}
	//    'Relation'
	//    '{'
	//        ('RelationType' RelationType=EString)?
	//        ('RelatedTo' RelatedTo=EString)?
	//    '}';
	public RelationElements getRelationAccess() {
		return pRelation;
	}
	
	public ParserRule getRelationRule() {
		return getRelationAccess().getRule();
	}
	
	//Variable returns Variable:
	//    {Variable}
	//    'Variable'
	//    '{'
	//        ('Name' Name=EString)?
	//        ('Value' Value=EString)?
	//        ('Type' Type=EString)?
	//    '}';
	public VariableElements getVariableAccess() {
		return pVariable;
	}
	
	public ParserRule getVariableRule() {
		return getVariableAccess().getRule();
	}
	
	//terminal ID: '^'?('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt: ('0'..'9')+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//            '"' ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|'"') )* '"' |
	//            "'" ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|"'") )* "'"
	//        ;
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT : '/*' -> '*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT : '//' !('\n'|'\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS         : (' '|'\t'|'\r'|'\n')+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER: .;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
