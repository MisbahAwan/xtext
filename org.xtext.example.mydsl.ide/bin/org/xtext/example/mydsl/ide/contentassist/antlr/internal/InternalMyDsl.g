/*
 * generated by Xtext 2.25.0
 */
grammar InternalMyDsl;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package org.xtext.example.mydsl.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.example.mydsl.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.xtext.example.mydsl.services.MyDslGrammarAccess;

}
@parser::members {
	private MyDslGrammarAccess grammarAccess;

	public void setGrammarAccess(MyDslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleZNotationModel
entryRuleZNotationModel
:
{ before(grammarAccess.getZNotationModelRule()); }
	 ruleZNotationModel
{ after(grammarAccess.getZNotationModelRule()); } 
	 EOF 
;

// Rule ZNotationModel
ruleZNotationModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getZNotationModelAccess().getGroup()); }
		(rule__ZNotationModel__Group__0)
		{ after(grammarAccess.getZNotationModelAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSchema
entryRuleSchema
:
{ before(grammarAccess.getSchemaRule()); }
	 ruleSchema
{ after(grammarAccess.getSchemaRule()); } 
	 EOF 
;

// Rule Schema
ruleSchema 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSchemaAccess().getGroup()); }
		(rule__Schema__Group__0)
		{ after(grammarAccess.getSchemaAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEString
entryRuleEString
:
{ before(grammarAccess.getEStringRule()); }
	 ruleEString
{ after(grammarAccess.getEStringRule()); } 
	 EOF 
;

// Rule EString
ruleEString 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEStringAccess().getAlternatives()); }
		(rule__EString__Alternatives)
		{ after(grammarAccess.getEStringAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRelation
entryRuleRelation
:
{ before(grammarAccess.getRelationRule()); }
	 ruleRelation
{ after(grammarAccess.getRelationRule()); } 
	 EOF 
;

// Rule Relation
ruleRelation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRelationAccess().getGroup()); }
		(rule__Relation__Group__0)
		{ after(grammarAccess.getRelationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVariable
entryRuleVariable
:
{ before(grammarAccess.getVariableRule()); }
	 ruleVariable
{ after(grammarAccess.getVariableRule()); } 
	 EOF 
;

// Rule Variable
ruleVariable 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVariableAccess().getGroup()); }
		(rule__Variable__Group__0)
		{ after(grammarAccess.getVariableAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EString__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
		RULE_STRING
		{ after(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
		RULE_ID
		{ after(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ZNotationModel__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ZNotationModel__Group__0__Impl
	rule__ZNotationModel__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ZNotationModel__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getZNotationModelAccess().getZNotationModelAction_0()); }
	()
	{ after(grammarAccess.getZNotationModelAccess().getZNotationModelAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ZNotationModel__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ZNotationModel__Group__1__Impl
	rule__ZNotationModel__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ZNotationModel__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getZNotationModelAccess().getZNotationModelKeyword_1()); }
	'ZNotationModel'
	{ after(grammarAccess.getZNotationModelAccess().getZNotationModelKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ZNotationModel__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ZNotationModel__Group__2__Impl
	rule__ZNotationModel__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ZNotationModel__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getZNotationModelAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getZNotationModelAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ZNotationModel__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ZNotationModel__Group__3__Impl
	rule__ZNotationModel__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ZNotationModel__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getZNotationModelAccess().getGroup_3()); }
	(rule__ZNotationModel__Group_3__0)?
	{ after(grammarAccess.getZNotationModelAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ZNotationModel__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ZNotationModel__Group__4__Impl
	rule__ZNotationModel__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ZNotationModel__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getZNotationModelAccess().getGroup_4()); }
	(rule__ZNotationModel__Group_4__0)?
	{ after(grammarAccess.getZNotationModelAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ZNotationModel__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ZNotationModel__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ZNotationModel__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getZNotationModelAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getZNotationModelAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ZNotationModel__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ZNotationModel__Group_3__0__Impl
	rule__ZNotationModel__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ZNotationModel__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getZNotationModelAccess().getModelNameKeyword_3_0()); }
	'ModelName'
	{ after(grammarAccess.getZNotationModelAccess().getModelNameKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ZNotationModel__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ZNotationModel__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ZNotationModel__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getZNotationModelAccess().getModelNameAssignment_3_1()); }
	(rule__ZNotationModel__ModelNameAssignment_3_1)
	{ after(grammarAccess.getZNotationModelAccess().getModelNameAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ZNotationModel__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ZNotationModel__Group_4__0__Impl
	rule__ZNotationModel__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ZNotationModel__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getZNotationModelAccess().getSchemaKeyword_4_0()); }
	'schema'
	{ after(grammarAccess.getZNotationModelAccess().getSchemaKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ZNotationModel__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ZNotationModel__Group_4__1__Impl
	rule__ZNotationModel__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ZNotationModel__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getZNotationModelAccess().getLeftCurlyBracketKeyword_4_1()); }
	'{'
	{ after(grammarAccess.getZNotationModelAccess().getLeftCurlyBracketKeyword_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ZNotationModel__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ZNotationModel__Group_4__2__Impl
	rule__ZNotationModel__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ZNotationModel__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getZNotationModelAccess().getSchemaAssignment_4_2()); }
	(rule__ZNotationModel__SchemaAssignment_4_2)
	{ after(grammarAccess.getZNotationModelAccess().getSchemaAssignment_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ZNotationModel__Group_4__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ZNotationModel__Group_4__3__Impl
	rule__ZNotationModel__Group_4__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ZNotationModel__Group_4__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getZNotationModelAccess().getGroup_4_3()); }
	(rule__ZNotationModel__Group_4_3__0)*
	{ after(grammarAccess.getZNotationModelAccess().getGroup_4_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ZNotationModel__Group_4__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ZNotationModel__Group_4__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ZNotationModel__Group_4__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getZNotationModelAccess().getRightCurlyBracketKeyword_4_4()); }
	'}'
	{ after(grammarAccess.getZNotationModelAccess().getRightCurlyBracketKeyword_4_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ZNotationModel__Group_4_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ZNotationModel__Group_4_3__0__Impl
	rule__ZNotationModel__Group_4_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ZNotationModel__Group_4_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getZNotationModelAccess().getCommaKeyword_4_3_0()); }
	','
	{ after(grammarAccess.getZNotationModelAccess().getCommaKeyword_4_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ZNotationModel__Group_4_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ZNotationModel__Group_4_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ZNotationModel__Group_4_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getZNotationModelAccess().getSchemaAssignment_4_3_1()); }
	(rule__ZNotationModel__SchemaAssignment_4_3_1)
	{ after(grammarAccess.getZNotationModelAccess().getSchemaAssignment_4_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Schema__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Schema__Group__0__Impl
	rule__Schema__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Schema__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSchemaAccess().getSchemaAction_0()); }
	()
	{ after(grammarAccess.getSchemaAccess().getSchemaAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Schema__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Schema__Group__1__Impl
	rule__Schema__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Schema__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSchemaAccess().getSchemaKeyword_1()); }
	'Schema'
	{ after(grammarAccess.getSchemaAccess().getSchemaKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Schema__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Schema__Group__2__Impl
	rule__Schema__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Schema__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSchemaAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getSchemaAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Schema__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Schema__Group__3__Impl
	rule__Schema__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Schema__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSchemaAccess().getGroup_3()); }
	(rule__Schema__Group_3__0)?
	{ after(grammarAccess.getSchemaAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Schema__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Schema__Group__4__Impl
	rule__Schema__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Schema__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSchemaAccess().getGroup_4()); }
	(rule__Schema__Group_4__0)?
	{ after(grammarAccess.getSchemaAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Schema__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Schema__Group__5__Impl
	rule__Schema__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Schema__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSchemaAccess().getGroup_5()); }
	(rule__Schema__Group_5__0)?
	{ after(grammarAccess.getSchemaAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Schema__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Schema__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Schema__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSchemaAccess().getRightCurlyBracketKeyword_6()); }
	'}'
	{ after(grammarAccess.getSchemaAccess().getRightCurlyBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Schema__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Schema__Group_3__0__Impl
	rule__Schema__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Schema__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSchemaAccess().getSchemaTitleKeyword_3_0()); }
	'SchemaTitle'
	{ after(grammarAccess.getSchemaAccess().getSchemaTitleKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Schema__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Schema__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Schema__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSchemaAccess().getSchemaTitleAssignment_3_1()); }
	(rule__Schema__SchemaTitleAssignment_3_1)
	{ after(grammarAccess.getSchemaAccess().getSchemaTitleAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Schema__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Schema__Group_4__0__Impl
	rule__Schema__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Schema__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSchemaAccess().getSchemastateKeyword_4_0()); }
	'schemastate'
	{ after(grammarAccess.getSchemaAccess().getSchemastateKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Schema__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Schema__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Schema__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSchemaAccess().getSchemastateAssignment_4_1()); }
	(rule__Schema__SchemastateAssignment_4_1)
	{ after(grammarAccess.getSchemaAccess().getSchemastateAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Schema__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Schema__Group_5__0__Impl
	rule__Schema__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Schema__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSchemaAccess().getRelationKeyword_5_0()); }
	'relation'
	{ after(grammarAccess.getSchemaAccess().getRelationKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Schema__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Schema__Group_5__1__Impl
	rule__Schema__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Schema__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSchemaAccess().getLeftCurlyBracketKeyword_5_1()); }
	'{'
	{ after(grammarAccess.getSchemaAccess().getLeftCurlyBracketKeyword_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Schema__Group_5__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Schema__Group_5__2__Impl
	rule__Schema__Group_5__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Schema__Group_5__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSchemaAccess().getRelationAssignment_5_2()); }
	(rule__Schema__RelationAssignment_5_2)
	{ after(grammarAccess.getSchemaAccess().getRelationAssignment_5_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Schema__Group_5__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Schema__Group_5__3__Impl
	rule__Schema__Group_5__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Schema__Group_5__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSchemaAccess().getGroup_5_3()); }
	(rule__Schema__Group_5_3__0)*
	{ after(grammarAccess.getSchemaAccess().getGroup_5_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Schema__Group_5__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Schema__Group_5__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Schema__Group_5__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSchemaAccess().getRightCurlyBracketKeyword_5_4()); }
	'}'
	{ after(grammarAccess.getSchemaAccess().getRightCurlyBracketKeyword_5_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Schema__Group_5_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Schema__Group_5_3__0__Impl
	rule__Schema__Group_5_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Schema__Group_5_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSchemaAccess().getCommaKeyword_5_3_0()); }
	','
	{ after(grammarAccess.getSchemaAccess().getCommaKeyword_5_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Schema__Group_5_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Schema__Group_5_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Schema__Group_5_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSchemaAccess().getRelationAssignment_5_3_1()); }
	(rule__Schema__RelationAssignment_5_3_1)
	{ after(grammarAccess.getSchemaAccess().getRelationAssignment_5_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Relation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Relation__Group__0__Impl
	rule__Relation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationAccess().getRelationAction_0()); }
	()
	{ after(grammarAccess.getRelationAccess().getRelationAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Relation__Group__1__Impl
	rule__Relation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationAccess().getRelationKeyword_1()); }
	'Relation'
	{ after(grammarAccess.getRelationAccess().getRelationKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Relation__Group__2__Impl
	rule__Relation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getRelationAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Relation__Group__3__Impl
	rule__Relation__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationAccess().getGroup_3()); }
	(rule__Relation__Group_3__0)?
	{ after(grammarAccess.getRelationAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Relation__Group__4__Impl
	rule__Relation__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationAccess().getGroup_4()); }
	(rule__Relation__Group_4__0)?
	{ after(grammarAccess.getRelationAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Relation__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getRelationAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Relation__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Relation__Group_3__0__Impl
	rule__Relation__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationAccess().getRelationTypeKeyword_3_0()); }
	'RelationType'
	{ after(grammarAccess.getRelationAccess().getRelationTypeKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Relation__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationAccess().getRelationTypeAssignment_3_1()); }
	(rule__Relation__RelationTypeAssignment_3_1)
	{ after(grammarAccess.getRelationAccess().getRelationTypeAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Relation__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Relation__Group_4__0__Impl
	rule__Relation__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationAccess().getRelatedToKeyword_4_0()); }
	'RelatedTo'
	{ after(grammarAccess.getRelationAccess().getRelatedToKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Relation__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationAccess().getRelatedToAssignment_4_1()); }
	(rule__Relation__RelatedToAssignment_4_1)
	{ after(grammarAccess.getRelationAccess().getRelatedToAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Variable__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable__Group__0__Impl
	rule__Variable__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableAccess().getVariableAction_0()); }
	()
	{ after(grammarAccess.getVariableAccess().getVariableAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable__Group__1__Impl
	rule__Variable__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableAccess().getVariableKeyword_1()); }
	'Variable'
	{ after(grammarAccess.getVariableAccess().getVariableKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable__Group__2__Impl
	rule__Variable__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getVariableAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable__Group__3__Impl
	rule__Variable__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableAccess().getGroup_3()); }
	(rule__Variable__Group_3__0)?
	{ after(grammarAccess.getVariableAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable__Group__4__Impl
	rule__Variable__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableAccess().getGroup_4()); }
	(rule__Variable__Group_4__0)?
	{ after(grammarAccess.getVariableAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable__Group__5__Impl
	rule__Variable__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableAccess().getGroup_5()); }
	(rule__Variable__Group_5__0)?
	{ after(grammarAccess.getVariableAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableAccess().getRightCurlyBracketKeyword_6()); }
	'}'
	{ after(grammarAccess.getVariableAccess().getRightCurlyBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Variable__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable__Group_3__0__Impl
	rule__Variable__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableAccess().getNameKeyword_3_0()); }
	'Name'
	{ after(grammarAccess.getVariableAccess().getNameKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableAccess().getNameAssignment_3_1()); }
	(rule__Variable__NameAssignment_3_1)
	{ after(grammarAccess.getVariableAccess().getNameAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Variable__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable__Group_4__0__Impl
	rule__Variable__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableAccess().getValueKeyword_4_0()); }
	'Value'
	{ after(grammarAccess.getVariableAccess().getValueKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableAccess().getValueAssignment_4_1()); }
	(rule__Variable__ValueAssignment_4_1)
	{ after(grammarAccess.getVariableAccess().getValueAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Variable__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable__Group_5__0__Impl
	rule__Variable__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableAccess().getTypeKeyword_5_0()); }
	'Type'
	{ after(grammarAccess.getVariableAccess().getTypeKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableAccess().getTypeAssignment_5_1()); }
	(rule__Variable__TypeAssignment_5_1)
	{ after(grammarAccess.getVariableAccess().getTypeAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ZNotationModel__ModelNameAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getZNotationModelAccess().getModelNameEStringParserRuleCall_3_1_0()); }
		ruleEString
		{ after(grammarAccess.getZNotationModelAccess().getModelNameEStringParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ZNotationModel__SchemaAssignment_4_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getZNotationModelAccess().getSchemaSchemaParserRuleCall_4_2_0()); }
		ruleSchema
		{ after(grammarAccess.getZNotationModelAccess().getSchemaSchemaParserRuleCall_4_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ZNotationModel__SchemaAssignment_4_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getZNotationModelAccess().getSchemaSchemaParserRuleCall_4_3_1_0()); }
		ruleSchema
		{ after(grammarAccess.getZNotationModelAccess().getSchemaSchemaParserRuleCall_4_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Schema__SchemaTitleAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSchemaAccess().getSchemaTitleEStringParserRuleCall_3_1_0()); }
		ruleEString
		{ after(grammarAccess.getSchemaAccess().getSchemaTitleEStringParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Schema__SchemastateAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSchemaAccess().getSchemastateSchemaStateCrossReference_4_1_0()); }
		(
			{ before(grammarAccess.getSchemaAccess().getSchemastateSchemaStateEStringParserRuleCall_4_1_0_1()); }
			ruleEString
			{ after(grammarAccess.getSchemaAccess().getSchemastateSchemaStateEStringParserRuleCall_4_1_0_1()); }
		)
		{ after(grammarAccess.getSchemaAccess().getSchemastateSchemaStateCrossReference_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Schema__RelationAssignment_5_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSchemaAccess().getRelationRelationParserRuleCall_5_2_0()); }
		ruleRelation
		{ after(grammarAccess.getSchemaAccess().getRelationRelationParserRuleCall_5_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Schema__RelationAssignment_5_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSchemaAccess().getRelationRelationParserRuleCall_5_3_1_0()); }
		ruleRelation
		{ after(grammarAccess.getSchemaAccess().getRelationRelationParserRuleCall_5_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__RelationTypeAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationAccess().getRelationTypeEStringParserRuleCall_3_1_0()); }
		ruleEString
		{ after(grammarAccess.getRelationAccess().getRelationTypeEStringParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__RelatedToAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationAccess().getRelatedToEStringParserRuleCall_4_1_0()); }
		ruleEString
		{ after(grammarAccess.getRelationAccess().getRelatedToEStringParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__NameAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableAccess().getNameEStringParserRuleCall_3_1_0()); }
		ruleEString
		{ after(grammarAccess.getVariableAccess().getNameEStringParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__ValueAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableAccess().getValueEStringParserRuleCall_4_1_0()); }
		ruleEString
		{ after(grammarAccess.getVariableAccess().getValueEStringParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__TypeAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableAccess().getTypeEStringParserRuleCall_5_1_0()); }
		ruleEString
		{ after(grammarAccess.getVariableAccess().getTypeEStringParserRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
